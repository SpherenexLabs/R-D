#include <Arduino.h>
 // Pin connected to the trigger pin of the ultrasonic sensor
 // Arduino pin tied to echo pin on the ultrasonic sensor.
#define MAX_DISTANCE 200 // Maximum distance (in centimeters) to ping for.
const int buttonPin = 7;  
#define RELAY1_PIN1 2 // Relay 1 control pin 1
#define RELAY1_PIN2 3 // Relay 1 control pin 2
#define RELAY2_PIN1 4 // Relay 2 control pin 1
#define RELAY2_PIN2 5 // Relay 2 control pin 2

//#define DIST_THRESHOLD 20 // Distance threshold for obstacle detection (in centimeters)
//#define BACKWARD_DURATION 1000 // Backward movement duration (in milliseconds)
//#define TURN_DURATION 1000 // Turn duration (in milliseconds)

//NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); // NewPing setup of pins and maximum distance.
int buttonState = 0;
void setup() {
  Serial.begin(9600);
  pinMode(RELAY1_PIN1, OUTPUT);
  pinMode(RELAY1_PIN2, OUTPUT);
  pinMode(RELAY2_PIN1, OUTPUT);
  pinMode(RELAY2_PIN2, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(7, INPUT);
  delay(200);
}

void loop() {


   if (Serial.available()) {
    char request = Serial.read();
    {
       if (request == 'L') {
        turnL();
        delay(1000);
       }
   if (request == 'R') {
        turnR();
        delay(1000);
       }
       if (request == 'F') {
        moveForward();
        delay(1000);
       }
       if (request == 'B') {
       reverse();
       delay(1000);
       }
       if (request == 'S') {
      stopMotors();
      delay(1000);
       } 
   
  }
}
} 


void moveForward() {
  // Move both motors forward
  digitalWrite(RELAY1_PIN1, HIGH);
  digitalWrite(RELAY1_PIN2, LOW);
  digitalWrite(RELAY2_PIN1, HIGH);
  digitalWrite(RELAY2_PIN2, LOW);
  
}

void stopMotors() {
  // Stop both motors
  digitalWrite(RELAY1_PIN1, LOW);
  digitalWrite(RELAY1_PIN2, LOW);
  digitalWrite(RELAY2_PIN1, LOW);
  digitalWrite(RELAY2_PIN2, LOW);
}

void reverse() {
  // Move both motors backward
  digitalWrite(RELAY1_PIN1, LOW);
  digitalWrite(RELAY1_PIN2, HIGH);
  digitalWrite(RELAY2_PIN1, LOW);
  digitalWrite(RELAY2_PIN2, HIGH);
}

void turnL() {
  // Turn by stopping one motor and running the other
  digitalWrite(RELAY1_PIN1, LOW);
  digitalWrite(RELAY1_PIN2, HIGH);
  digitalWrite(RELAY2_PIN1, HIGH);
  digitalWrite(RELAY2_PIN2, LOW);
  //delay(TURN_DURATION);
}
void turnR() {
  // Turn by stopping one motor and running the other
  digitalWrite(RELAY1_PIN1, HIGH);
  digitalWrite(RELAY1_PIN2, LOW);
  digitalWrite(RELAY2_PIN1, LOW);
  digitalWrite(RELAY2_PIN2, HIGH);
  //delay(TURN_DURATION);
}


